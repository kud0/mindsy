---
import { getCollection } from "astro:content";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import Navbar from "../../../components/Navbar.astro";
import BlogBreadcrumb from "../../../components/BlogBreadcrumb.astro";
import HeroImage from "../../../components/HeroImage.astro";
import { getAuthor, getAllAuthors } from "../../../lib/authors.ts";

export const prerender = true;

export async function getStaticPaths() {
  // Get all blog posts, filtering drafts based on environment
  const allPosts = await getCollection("blog", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  });
  
  // Extract all unique authors
  const authorNames = new Set<string>();
  allPosts.forEach((post) => {
    if (post.data.author) {
      authorNames.add(post.data.author);
    }
  });
  
  // Generate paths for each author
  return Array.from(authorNames).map((authorName) => {
    const author = getAuthor(authorName);
    return {
      params: { author: author.id },
      props: { authorName, authorData: author }
    };
  });
}

const { authorName, authorData } = Astro.props;

// Get all blog posts by this author, filtering drafts based on environment
const allPosts = await getCollection("blog", ({ data }) => {
  return import.meta.env.PROD ? data.draft !== true : true;
});

const authorPosts = allPosts
  .filter((post) => post.data.author === authorName)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Format date helper function
function formatDate(date: Date): string {
  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
}
---

<BaseLayout
  title={`Posts by ${authorData.name}`}
  description={`Browse all blog posts written by ${authorData.name}. ${authorData.bio || ''}`}
>
  <Navbar />

  <div class="min-h-screen bg-gray-50">
    <!-- Header Section with Breadcrumbs -->
    <section class="bg-white border-b">
      <div class="container mx-auto px-4 py-16">
        <div class="max-w-4xl mx-auto">
          <!-- Breadcrumb Navigation -->
          <div class="mb-8">
            <BlogBreadcrumb 
              items={[
                { label: 'Blog', href: '/blog' },
                { label: 'Authors', href: '/blog/authors' },
                { label: authorData.name }
              ]}
            />
          </div>

          <!-- Author Profile -->
          <div class="text-center">
            <!-- Author Avatar -->
            {authorData.avatar && (
              <div class="mb-6">
                <img 
                  src={authorData.avatar} 
                  alt={`${authorData.name} avatar`}
                  class="w-24 h-24 rounded-full mx-auto object-cover border-4 border-white shadow-lg"
                  loading="eager"
                />
              </div>
            )}
            
            <!-- Author Name -->
            <h1 class="text-4xl font-bold text-gray-900 mb-4">
              {authorData.name}
            </h1>
            
            <!-- Author Bio -->
            {authorData.bio && (
              <p class="text-xl text-gray-600 mb-6 max-w-2xl mx-auto">
                {authorData.bio}
              </p>
            )}
            
            <!-- Social Links -->
            {authorData.social && (
              <div class="flex justify-center gap-4 mb-6">
                {authorData.social.twitter && (
                  <a 
                    href={`https://twitter.com/${authorData.social.twitter.replace('@', '')}`}
                    class="text-blue-500 hover:text-blue-600 transition-colors"
                    target="_blank"
                    rel="noopener noreferrer"
                    aria-label={`${authorData.name} on Twitter`}
                  >
                    <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                    </svg>
                  </a>
                )}
                
                {authorData.social.github && (
                  <a 
                    href={`https://github.com/${authorData.social.github}`}
                    class="text-gray-700 hover:text-gray-900 transition-colors"
                    target="_blank"
                    rel="noopener noreferrer"
                    aria-label={`${authorData.name} on GitHub`}
                  >
                    <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                  </a>
                )}
                
                {authorData.social.linkedin && (
                  <a 
                    href={`https://linkedin.com/in/${authorData.social.linkedin}`}
                    class="text-blue-700 hover:text-blue-800 transition-colors"
                    target="_blank"
                    rel="noopener noreferrer"
                    aria-label={`${authorData.name} on LinkedIn`}
                  >
                    <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                    </svg>
                  </a>
                )}
              </div>
            )}
            
            <!-- Website Link -->
            {authorData.website && (
              <div class="mb-6">
                <a 
                  href={authorData.website}
                  class="inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 transition-colors"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                  </svg>
                  Visit Website
                </a>
              </div>
            )}
            
            <!-- Post Count -->
            <p class="text-gray-600">
              {authorPosts.length} {authorPosts.length === 1 ? 'post' : 'posts'} published
            </p>
          </div>
        </div>
      </div>
    </section>

    <!-- Author's Posts Section -->
    <section class="py-16">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto">
          {
            authorPosts.length === 0 ? (
              <div class="text-center py-16">
                <p class="text-gray-600 text-lg mb-4">
                  No posts found by {authorData.name}.
                </p>
                <a 
                  href="/blog"
                  class="inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 transition-colors"
                >
                  <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                  </svg>
                  Back to All Posts
                </a>
              </div>
            ) : (
              <div class="space-y-8">
                {authorPosts.map((post) => (
                  <article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300">
                    {post.data.heroImage && (
                      <div class="aspect-video overflow-hidden">
                        <HeroImage 
                          src={post.data.heroImage} 
                          alt={`Hero image for ${post.data.title}`}
                          class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                          loading="lazy"
                          showFallback={false}
                        />
                      </div>
                    )}
                    <div class="p-8">
                      <div class="flex items-center text-sm text-gray-500 mb-4">
                        {post.data.draft && !import.meta.env.PROD && (
                          <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full mr-3 font-medium">
                            DRAFT
                          </span>
                        )}
                        <time datetime={post.data.pubDate.toISOString()}>
                          {formatDate(post.data.pubDate)}
                        </time>
                      </div>

                      <h2 class="text-2xl font-bold text-gray-900 mb-4 hover:text-blue-600 transition-colors">
                        <a href={`/blog/${post.slug}`}>{post.data.title}</a>
                      </h2>

                      <p class="text-gray-600 mb-6 leading-relaxed">
                        {post.data.description}
                      </p>

                      {post.data.tags && post.data.tags.length > 0 && (
                        <div class="flex flex-wrap gap-2 mb-6">
                          {post.data.tags.map((tag) => (
                            <a 
                              href={`/blog/tags/${tag}`}
                              class="inline-block bg-blue-100 text-blue-800 text-sm px-3 py-1 rounded-full hover:bg-blue-200 transition-colors"
                            >
                              #{tag}
                            </a>
                          ))}
                        </div>
                      )}

                      <a
                        href={`/blog/${post.slug}`}
                        class="inline-flex items-center text-blue-600 hover:text-blue-800 font-medium transition-colors"
                      >
                        Read more
                        <svg
                          class="w-4 h-4 ml-2"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M9 5l7 7-7 7"
                          />
                        </svg>
                      </a>
                    </div>
                  </article>
                ))}
              </div>
            )
          }
          
          <!-- Back to Blog Navigation -->
          <div class="mt-12 pt-8 border-t border-gray-200 text-center">
            <a 
              href="/blog"
              class="inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 transition-colors"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
              </svg>
              Back to All Posts
            </a>
          </div>
        </div>
      </div>
    </section>
  </div>
</BaseLayout>