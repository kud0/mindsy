---
import { getCollection } from "astro:content";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import Navbar from "../../../components/Navbar.astro";
import BlogBreadcrumb from "../../../components/BlogBreadcrumb.astro";
import HeroImage from "../../../components/HeroImage.astro";

export const prerender = true;

export async function getStaticPaths() {
  // Get all blog posts, filtering drafts based on environment
  const allPosts = await getCollection("blog", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  });
  
  // Extract all unique tags
  const allTags = new Set<string>();
  allPosts.forEach((post) => {
    if (post.data.tags) {
      post.data.tags.forEach((tag) => allTags.add(tag));
    }
  });
  
  // Generate paths for each tag
  return Array.from(allTags).map((tag) => ({
    params: { tag },
    props: { tag }
  }));
}

const { tag } = Astro.props;

// Get all blog posts for this tag, filtering drafts based on environment
const allPosts = await getCollection("blog", ({ data }) => {
  return import.meta.env.PROD ? data.draft !== true : true;
});
const taggedPosts = allPosts
  .filter((post) => post.data.tags?.includes(tag))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Format date helper function
function formatDate(date: Date): string {
  return date.toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
}

// Capitalize first letter of tag for display
const displayTag = tag.charAt(0).toUpperCase() + tag.slice(1);
---

<BaseLayout
  title={`Posts tagged "${displayTag}"`}
  description={`Browse all blog posts tagged with "${displayTag}". Find articles related to ${displayTag} and more.`}
>
  <Navbar />

  <div class="min-h-screen bg-gray-50">
    <!-- Header Section with Breadcrumbs -->
    <section class="bg-white border-b">
      <div class="container mx-auto px-4 py-16">
        <div class="max-w-4xl mx-auto">
          <!-- Breadcrumb Navigation -->
          <div class="mb-6">
            <BlogBreadcrumb 
              items={[
                { label: 'Blog', href: '/blog' },
                { label: `#${displayTag}` }
              ]}
            />
          </div>

          <!-- Page Title -->
          <div class="text-center">
            <div class="inline-block bg-blue-100 text-blue-800 text-sm px-4 py-2 rounded-full mb-4">
              #{displayTag}
            </div>
            <h1 class="text-4xl font-bold text-gray-900 mb-4">
              Posts tagged "{displayTag}"
            </h1>
            <p class="text-xl text-gray-600">
              {taggedPosts.length} {taggedPosts.length === 1 ? 'post' : 'posts'} found
            </p>
          </div>
        </div>
      </div>
    </section>

    <!-- Tagged Posts Section -->
    <section class="py-16">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto">
          {
            taggedPosts.length === 0 ? (
              <div class="text-center py-16">
                <p class="text-gray-600 text-lg mb-4">
                  No posts found with the tag "{displayTag}".
                </p>
                <a 
                  href="/blog"
                  class="inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 transition-colors"
                >
                  <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                  </svg>
                  Back to All Posts
                </a>
              </div>
            ) : (
              <div class="space-y-8">
                {taggedPosts.map((post) => (
                  <article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300">
                    {post.data.heroImage && (
                      <div class="aspect-video overflow-hidden">
                        <HeroImage 
                          src={post.data.heroImage} 
                          alt={`Hero image for ${post.data.title}`}
                          class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                          loading="lazy"
                          showFallback={false}
                        />
                      </div>
                    )}
                    <div class="p-8">
                      <div class="flex items-center text-sm text-gray-500 mb-4">
                        {post.data.draft && !import.meta.env.PROD && (
                          <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full mr-3 font-medium">
                            DRAFT
                          </span>
                        )}
                        <time datetime={post.data.pubDate.toISOString()}>
                          {formatDate(post.data.pubDate)}
                        </time>
                        {post.data.author && (
                          <>
                            <span class="mx-2">â€¢</span>
                            <span>By {post.data.author}</span>
                          </>
                        )}
                      </div>

                      <h2 class="text-2xl font-bold text-gray-900 mb-4 hover:text-blue-600 transition-colors">
                        <a href={`/blog/${post.slug}`}>{post.data.title}</a>
                      </h2>

                      <p class="text-gray-600 mb-6 leading-relaxed">
                        {post.data.description}
                      </p>

                      {post.data.tags && post.data.tags.length > 0 && (
                        <div class="flex flex-wrap gap-2 mb-6">
                          {post.data.tags.map((postTag) => (
                            <a 
                              href={`/blog/tags/${postTag}`}
                              class={`inline-block text-sm px-3 py-1 rounded-full transition-colors ${
                                postTag === tag 
                                  ? 'bg-blue-600 text-white' 
                                  : 'bg-blue-100 text-blue-800 hover:bg-blue-200'
                              }`}
                            >
                              #{postTag}
                            </a>
                          ))}
                        </div>
                      )}

                      <a
                        href={`/blog/${post.slug}`}
                        class="inline-flex items-center text-blue-600 hover:text-blue-800 font-medium transition-colors"
                      >
                        Read more
                        <svg
                          class="w-4 h-4 ml-2"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M9 5l7 7-7 7"
                          />
                        </svg>
                      </a>
                    </div>
                  </article>
                ))}
              </div>
            )
          }
          
          <!-- Back to Blog Navigation -->
          <div class="mt-12 pt-8 border-t border-gray-200 text-center">
            <a 
              href="/blog"
              class="inline-flex items-center gap-2 text-blue-600 hover:text-blue-800 transition-colors"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
              </svg>
              Back to All Posts
            </a>
          </div>
        </div>
      </div>
    </section>
  </div>
</BaseLayout>