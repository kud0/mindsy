---
export interface Props {
  lang?: 'en' | 'es';
  text?: string;
  redirectTo?: string;
}

const { lang = 'en', text, redirectTo = '/dashboard' } = Astro.props;

// Text based on language
const buttonTexts = {
  en: {
    default: 'Continue with GitHub',
    loading: 'Loading...',
    error: 'Try Again'
  },
  es: {
    default: 'Continuar con GitHub',
    loading: 'Cargando...',
    error: 'Reintentar'  
  }
};

const buttonText = text || buttonTexts[lang].default;
const loadingText = buttonTexts[lang].loading;
const errorText = buttonTexts[lang].error;
---

<button
  id="github-oauth-btn"
  type="button"
  class="w-full flex justify-center items-center py-2 px-4 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
>
  <!-- GitHub Icon -->
  <svg id="github-icon" class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z" clip-rule="evenodd"></path>
  </svg>
  <svg id="loading-spinner" class="w-5 h-5 mr-2 animate-spin hidden" fill="none" viewBox="0 0 24 24">
    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
  </svg>
  <span id="button-text">{buttonText}</span>
</button>

<script type="module" define:vars={{ 
  buttonText, 
  loadingText, 
  errorText,
  supabaseUrl: import.meta.env.PUBLIC_SUPABASE_URL,
  supabaseAnonKey: import.meta.env.PUBLIC_SUPABASE_ANON_KEY
}}>
  document.addEventListener('DOMContentLoaded', async () => {
    const button = document.getElementById('github-oauth-btn');
    const icon = document.getElementById('github-icon');
    const spinner = document.getElementById('loading-spinner');
    const buttonTextElement = document.getElementById('button-text');
    
    if (!button || !icon || !spinner || !buttonTextElement) {
      return;
    }

    // Simple state management
    const setState = (loading = false, error = false) => {
      button.disabled = loading;
      icon.classList.toggle('hidden', loading);
      spinner.classList.toggle('hidden', !loading);
      
      if (error) {
        buttonTextElement.textContent = errorText;
        button.classList.add('border-red-300', 'text-red-700', 'bg-red-50');
      } else if (loading) {
        buttonTextElement.textContent = loadingText;
        button.classList.remove('border-red-300', 'text-red-700', 'bg-red-50');
      } else {
        buttonTextElement.textContent = buttonText;
        button.classList.remove('border-red-300', 'text-red-700', 'bg-red-50');
      }
    };

    // Handle OAuth click - use window.location for OAuth flows
    const handleClick = async () => {
      setState(true);
      
      try {
        // For OAuth, we need to navigate the entire window, not use fetch
        // Create form and submit to trigger proper browser navigation
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '/api/auth/signin';
        form.style.display = 'none';
        
        const providerInput = document.createElement('input');
        providerInput.type = 'hidden';
        providerInput.name = 'provider';
        providerInput.value = 'github';
        
        const emailInput = document.createElement('input');
        emailInput.type = 'hidden';
        emailInput.name = 'email';
        emailInput.value = 'oauth@github.com';
        
        form.appendChild(providerInput);
        form.appendChild(emailInput);
        document.body.appendChild(form);
        
        form.submit();
        
      } catch (err) {
        setState(false, true);
        setTimeout(() => setState(false), 3000);
      }
    };

    button.addEventListener('click', handleClick);
  });
</script>